// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.18.1
// source: e-invoice-proxy-ctl/inter_comm_server_client_msg.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 命令字
type CMD int32

const (
	CMD_CMD_NONE                        CMD = 0
	CMD_CMD_HEART_BEAT_REQ              CMD = 1  //心跳请求
	CMD_CMD_HEART_BEAT_RSP              CMD = 2  //心跳响应;body为空
	CMD_CMD_OPEN_URL_REQ                CMD = 3  //打开税局url
	CMD_CMD_OPEN_URL_RSP                CMD = 4  //打开税局url响应;body为空
	CMD_CMD_PROXY_REQ                   CMD = 5  //代理请求
	CMD_CMD_PROXY_RSP                   CMD = 6  //代理请求响应;body非空
	CMD_CMD_UPLOAD_LOGIN_REQ            CMD = 7  //上报税号登录态
	CMD_CMD_UPLOAD_LOGIN_RSP            CMD = 8  //上报税号登录态响应;body非空
	CMD_CMD_UPLOAD_COOKIE_REQ           CMD = 9  //上传cookie
	CMD_CMD_UPLOAD_COOKIE_RSP           CMD = 10 //上传cookie响应;body不为空，包含了客户端定时任务的时间
	CMD_CMD_QR_RZ_REQ                   CMD = 11 // 发送组装"获取二次实人认证二维码"数据请求：客户端主动向服务端发起（根据定时任务设置的时间发起）
	CMD_CMD_QR_RZ_RSP                   CMD = 12 // 响应组装"获取二次实人认证二维码"数据请求：收到代理请求结果分析为需要实名认证后，由服务端主动发起
	CMD_CMD_QR_RZ_STATUS_REQ            CMD = 13 // 发送组装"二维码扫脸认证状态"数据请求
	CMD_CMD_QR_RZ_STATUS_RSP            CMD = 14 // 响应组装"二维码扫脸认证状态"数据
	CMD_CMD_CK_CLIENT_UPGRADE_REQ       CMD = 15 // 请求检查客户端是否需要升级
	CMD_CMD_CK_CLIENT_UPGRADE_RSP       CMD = 16 // 响应客户端是否需要升级请求
	CMD_CMD_CLIENT_UPGRADE_NOTICE_REQ   CMD = 17 // 客户端版本发生变更通知请求：服务端主动向客户端发起
	CMD_CMD_CLIENT_UPGRADE_NOTICE_RSP   CMD = 18 // 客户端版本发生变更通知响应
	CMD_CMD_EID_TAX_URL_REQ             CMD = 19 // 获取税号的全电官网地址请求
	CMD_CMD_EID_TAX_URL_RSP             CMD = 20 // 获取税号的全电官网地址响应
	CMD_CMD_TAX_AUTH_QR_CODE_CHANGE_REQ CMD = 21 // 税局实人认证二维码信息变更请求
	CMD_CMD_TAX_AUTH_QR_CODE_CHANGE_RSP CMD = 22 // 税局实人认证二维码信息变更响应
	CMD_CMD_DOM_REQ                     CMD = 23 // 获取税局页面DOM信息
	CMD_CMD_DOM_RSP                     CMD = 24 // 返回税局页面DOM信息
	CMD_CMD_SPUSHQRCODE_REQ             CMD = 25 // 推送实人认证二维码和二维码扫码状态:服务端发起
	CMD_CMD_SPUSHQRCODE_RSP             CMD = 26 // 推送实人认证二维码和二维码扫码状态
)

// Enum value maps for CMD.
var (
	CMD_name = map[int32]string{
		0:  "CMD_NONE",
		1:  "CMD_HEART_BEAT_REQ",
		2:  "CMD_HEART_BEAT_RSP",
		3:  "CMD_OPEN_URL_REQ",
		4:  "CMD_OPEN_URL_RSP",
		5:  "CMD_PROXY_REQ",
		6:  "CMD_PROXY_RSP",
		7:  "CMD_UPLOAD_LOGIN_REQ",
		8:  "CMD_UPLOAD_LOGIN_RSP",
		9:  "CMD_UPLOAD_COOKIE_REQ",
		10: "CMD_UPLOAD_COOKIE_RSP",
		11: "CMD_QR_RZ_REQ",
		12: "CMD_QR_RZ_RSP",
		13: "CMD_QR_RZ_STATUS_REQ",
		14: "CMD_QR_RZ_STATUS_RSP",
		15: "CMD_CK_CLIENT_UPGRADE_REQ",
		16: "CMD_CK_CLIENT_UPGRADE_RSP",
		17: "CMD_CLIENT_UPGRADE_NOTICE_REQ",
		18: "CMD_CLIENT_UPGRADE_NOTICE_RSP",
		19: "CMD_EID_TAX_URL_REQ",
		20: "CMD_EID_TAX_URL_RSP",
		21: "CMD_TAX_AUTH_QR_CODE_CHANGE_REQ",
		22: "CMD_TAX_AUTH_QR_CODE_CHANGE_RSP",
		23: "CMD_DOM_REQ",
		24: "CMD_DOM_RSP",
		25: "CMD_SPUSHQRCODE_REQ",
		26: "CMD_SPUSHQRCODE_RSP",
	}
	CMD_value = map[string]int32{
		"CMD_NONE":                        0,
		"CMD_HEART_BEAT_REQ":              1,
		"CMD_HEART_BEAT_RSP":              2,
		"CMD_OPEN_URL_REQ":                3,
		"CMD_OPEN_URL_RSP":                4,
		"CMD_PROXY_REQ":                   5,
		"CMD_PROXY_RSP":                   6,
		"CMD_UPLOAD_LOGIN_REQ":            7,
		"CMD_UPLOAD_LOGIN_RSP":            8,
		"CMD_UPLOAD_COOKIE_REQ":           9,
		"CMD_UPLOAD_COOKIE_RSP":           10,
		"CMD_QR_RZ_REQ":                   11,
		"CMD_QR_RZ_RSP":                   12,
		"CMD_QR_RZ_STATUS_REQ":            13,
		"CMD_QR_RZ_STATUS_RSP":            14,
		"CMD_CK_CLIENT_UPGRADE_REQ":       15,
		"CMD_CK_CLIENT_UPGRADE_RSP":       16,
		"CMD_CLIENT_UPGRADE_NOTICE_REQ":   17,
		"CMD_CLIENT_UPGRADE_NOTICE_RSP":   18,
		"CMD_EID_TAX_URL_REQ":             19,
		"CMD_EID_TAX_URL_RSP":             20,
		"CMD_TAX_AUTH_QR_CODE_CHANGE_REQ": 21,
		"CMD_TAX_AUTH_QR_CODE_CHANGE_RSP": 22,
		"CMD_DOM_REQ":                     23,
		"CMD_DOM_RSP":                     24,
		"CMD_SPUSHQRCODE_REQ":             25,
		"CMD_SPUSHQRCODE_RSP":             26,
	}
)

func (x CMD) Enum() *CMD {
	p := new(CMD)
	*p = x
	return p
}

func (x CMD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CMD) Descriptor() protoreflect.EnumDescriptor {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[0].Descriptor()
}

func (CMD) Type() protoreflect.EnumType {
	return &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[0]
}

func (x CMD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CMD.Descriptor instead.
func (CMD) EnumDescriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{0}
}

// rpa命令字
type RPACMD int32

const (
	RPACMD_RPA_NONE       RPACMD = 0 //执行js
	RPACMD_RPA_JS         RPACMD = 1 //执行js
	RPACMD_RPA_ID         RPACMD = 2 //查找id
	RPACMD_RPA_CLASS_NAME RPACMD = 3 //查找className
	RPACMD_RPA_TAG_NAME   RPACMD = 4 //查找tagName
)

// Enum value maps for RPACMD.
var (
	RPACMD_name = map[int32]string{
		0: "RPA_NONE",
		1: "RPA_JS",
		2: "RPA_ID",
		3: "RPA_CLASS_NAME",
		4: "RPA_TAG_NAME",
	}
	RPACMD_value = map[string]int32{
		"RPA_NONE":       0,
		"RPA_JS":         1,
		"RPA_ID":         2,
		"RPA_CLASS_NAME": 3,
		"RPA_TAG_NAME":   4,
	}
)

func (x RPACMD) Enum() *RPACMD {
	p := new(RPACMD)
	*p = x
	return p
}

func (x RPACMD) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPACMD) Descriptor() protoreflect.EnumDescriptor {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[1].Descriptor()
}

func (RPACMD) Type() protoreflect.EnumType {
	return &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[1]
}

func (x RPACMD) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RPACMD.Descriptor instead.
func (RPACMD) EnumDescriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{1}
}

type TaxAuthQrCodeChangeReqType int32

const (
	TaxAuthQrCodeChangeReqType_TypeNone         TaxAuthQrCodeChangeReqType = 0
	TaxAuthQrCodeChangeReqType_TypeQrCode       TaxAuthQrCodeChangeReqType = 1
	TaxAuthQrCodeChangeReqType_TypeQrCodeStatus TaxAuthQrCodeChangeReqType = 2
)

// Enum value maps for TaxAuthQrCodeChangeReqType.
var (
	TaxAuthQrCodeChangeReqType_name = map[int32]string{
		0: "TypeNone",
		1: "TypeQrCode",
		2: "TypeQrCodeStatus",
	}
	TaxAuthQrCodeChangeReqType_value = map[string]int32{
		"TypeNone":         0,
		"TypeQrCode":       1,
		"TypeQrCodeStatus": 2,
	}
)

func (x TaxAuthQrCodeChangeReqType) Enum() *TaxAuthQrCodeChangeReqType {
	p := new(TaxAuthQrCodeChangeReqType)
	*p = x
	return p
}

func (x TaxAuthQrCodeChangeReqType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaxAuthQrCodeChangeReqType) Descriptor() protoreflect.EnumDescriptor {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[2].Descriptor()
}

func (TaxAuthQrCodeChangeReqType) Type() protoreflect.EnumType {
	return &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[2]
}

func (x TaxAuthQrCodeChangeReqType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaxAuthQrCodeChangeReqType.Descriptor instead.
func (TaxAuthQrCodeChangeReqType) EnumDescriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{2}
}

type TaxAuthQrCodeChangeReqQrCodeStatus int32

const (
	TaxAuthQrCodeChangeReqQrCodeStatus_StatusNone    TaxAuthQrCodeChangeReqQrCodeStatus = 0
	TaxAuthQrCodeChangeReqQrCodeStatus_StatusIng     TaxAuthQrCodeChangeReqQrCodeStatus = 1
	TaxAuthQrCodeChangeReqQrCodeStatus_StatusDone    TaxAuthQrCodeChangeReqQrCodeStatus = 2
	TaxAuthQrCodeChangeReqQrCodeStatus_StatusRefresh TaxAuthQrCodeChangeReqQrCodeStatus = 3
	TaxAuthQrCodeChangeReqQrCodeStatus_StatusReLogin TaxAuthQrCodeChangeReqQrCodeStatus = 4
)

// Enum value maps for TaxAuthQrCodeChangeReqQrCodeStatus.
var (
	TaxAuthQrCodeChangeReqQrCodeStatus_name = map[int32]string{
		0: "StatusNone",
		1: "StatusIng",
		2: "StatusDone",
		3: "StatusRefresh",
		4: "StatusReLogin",
	}
	TaxAuthQrCodeChangeReqQrCodeStatus_value = map[string]int32{
		"StatusNone":    0,
		"StatusIng":     1,
		"StatusDone":    2,
		"StatusRefresh": 3,
		"StatusReLogin": 4,
	}
)

func (x TaxAuthQrCodeChangeReqQrCodeStatus) Enum() *TaxAuthQrCodeChangeReqQrCodeStatus {
	p := new(TaxAuthQrCodeChangeReqQrCodeStatus)
	*p = x
	return p
}

func (x TaxAuthQrCodeChangeReqQrCodeStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaxAuthQrCodeChangeReqQrCodeStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[3].Descriptor()
}

func (TaxAuthQrCodeChangeReqQrCodeStatus) Type() protoreflect.EnumType {
	return &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes[3]
}

func (x TaxAuthQrCodeChangeReqQrCodeStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaxAuthQrCodeChangeReqQrCodeStatus.Descriptor instead.
func (TaxAuthQrCodeChangeReqQrCodeStatus) EnumDescriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{3}
}

// 前后端通信通用结构
type SendMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd         CMD    `protobuf:"varint,1,opt,name=cmd,proto3,enum=einvoiceproxyctl.CMD" json:"cmd,omitempty"`
	Token       string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` //SAAS平台登录成功的token,客户端请求服务器用,响应时为空
	LogId       string `protobuf:"bytes,3,opt,name=log_id,json=logId,proto3" json:"log_id,omitempty"`
	RespCode    int32  `protobuf:"varint,4,opt,name=resp_code,json=respCode,proto3" json:"resp_code,omitempty"`
	RespMessage string `protobuf:"bytes,5,opt,name=resp_message,json=respMessage,proto3" json:"resp_message,omitempty"`
	Body        []byte `protobuf:"bytes,6,opt,name=body,proto3" json:"body,omitempty"` // 请求或者响应的body都在这里
}

func (x *SendMsg) Reset() {
	*x = SendMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendMsg) ProtoMessage() {}

func (x *SendMsg) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendMsg.ProtoReflect.Descriptor instead.
func (*SendMsg) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{0}
}

func (x *SendMsg) GetCmd() CMD {
	if x != nil {
		return x.Cmd
	}
	return CMD_CMD_NONE
}

func (x *SendMsg) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SendMsg) GetLogId() string {
	if x != nil {
		return x.LogId
	}
	return ""
}

func (x *SendMsg) GetRespCode() int32 {
	if x != nil {
		return x.RespCode
	}
	return 0
}

func (x *SendMsg) GetRespMessage() string {
	if x != nil {
		return x.RespMessage
	}
	return ""
}

func (x *SendMsg) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

type HeaderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`     // 头部信息的键名
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"` // 头部信息的键值
}

func (x *HeaderInfo) Reset() {
	*x = HeaderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeaderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeaderInfo) ProtoMessage() {}

func (x *HeaderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeaderInfo.ProtoReflect.Descriptor instead.
func (*HeaderInfo) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{1}
}

func (x *HeaderInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *HeaderInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 代理请求
type ProxyRequestReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq       string        `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"`                               //请求流水号
	Url       string        `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                               //代理请求url
	ProxyType int32         `protobuf:"varint,3,opt,name=proxy_type,json=proxyType,proto3" json:"proxy_type,omitempty"` //代理请求的类型；1:开蓝票接口；2:红字信息表申请（生成红字确认信息单）；3:开红票
	HeadInfos []*HeaderInfo `protobuf:"bytes,4,rep,name=head_infos,json=headInfos,proto3" json:"head_infos,omitempty"`  //请求局端信息头
	ReqData   []byte        `protobuf:"bytes,5,opt,name=req_data,json=reqData,proto3" json:"req_data,omitempty"`        //代理请求数据
}

func (x *ProxyRequestReq) Reset() {
	*x = ProxyRequestReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyRequestReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRequestReq) ProtoMessage() {}

func (x *ProxyRequestReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRequestReq.ProtoReflect.Descriptor instead.
func (*ProxyRequestReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{2}
}

func (x *ProxyRequestReq) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *ProxyRequestReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ProxyRequestReq) GetProxyType() int32 {
	if x != nil {
		return x.ProxyType
	}
	return 0
}

func (x *ProxyRequestReq) GetHeadInfos() []*HeaderInfo {
	if x != nil {
		return x.HeadInfos
	}
	return nil
}

func (x *ProxyRequestReq) GetReqData() []byte {
	if x != nil {
		return x.ReqData
	}
	return nil
}

// 代理响应
type ProxyRequestRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq     string `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"`                        // 请求流水号
	RspData []byte `protobuf:"bytes,2,opt,name=rsp_data,json=rspData,proto3" json:"rsp_data,omitempty"` //代理请求响应数据
}

func (x *ProxyRequestRsp) Reset() {
	*x = ProxyRequestRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProxyRequestRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProxyRequestRsp) ProtoMessage() {}

func (x *ProxyRequestRsp) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProxyRequestRsp.ProtoReflect.Descriptor instead.
func (*ProxyRequestRsp) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{3}
}

func (x *ProxyRequestRsp) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *ProxyRequestRsp) GetRspData() []byte {
	if x != nil {
		return x.RspData
	}
	return nil
}

// 客户端掉线重连：上报企业ID及登录状态
type UploadLogin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId       int32  `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`                    //业务id
	OpenEnterpriseId string `protobuf:"bytes,2,opt,name=open_enterprise_id,json=openEnterpriseId,proto3" json:"open_enterprise_id,omitempty"` //社会信用代码，aes加密再base64传输
	LoginFlag        int32  `protobuf:"varint,3,opt,name=login_flag,json=loginFlag,proto3" json:"login_flag,omitempty"`                       //登录态；1:已登录；2:未登录
}

func (x *UploadLogin) Reset() {
	*x = UploadLogin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadLogin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadLogin) ProtoMessage() {}

func (x *UploadLogin) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadLogin.ProtoReflect.Descriptor instead.
func (*UploadLogin) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{4}
}

func (x *UploadLogin) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *UploadLogin) GetOpenEnterpriseId() string {
	if x != nil {
		return x.OpenEnterpriseId
	}
	return ""
}

func (x *UploadLogin) GetLoginFlag() int32 {
	if x != nil {
		return x.LoginFlag
	}
	return 0
}

// 上报cookie
type UploadCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BusinessId       int32      `protobuf:"varint,1,opt,name=business_id,json=businessId,proto3" json:"business_id,omitempty"`                    //业务id
	OpenEnterpriseId string     `protobuf:"bytes,2,opt,name=open_enterprise_id,json=openEnterpriseId,proto3" json:"open_enterprise_id,omitempty"` //社会信用代码，aes加密再base64传输
	Cookies          []*Cookies `protobuf:"bytes,3,rep,name=cookies,proto3" json:"cookies,omitempty"`                                             //cookie信息
	BrowserRequest   string     `protobuf:"bytes,4,opt,name=browser_request,json=browserRequest,proto3" json:"browser_request,omitempty"`         //用户登录成功后的请求头json字符串
}

func (x *UploadCookie) Reset() {
	*x = UploadCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCookie) ProtoMessage() {}

func (x *UploadCookie) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCookie.ProtoReflect.Descriptor instead.
func (*UploadCookie) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{5}
}

func (x *UploadCookie) GetBusinessId() int32 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *UploadCookie) GetOpenEnterpriseId() string {
	if x != nil {
		return x.OpenEnterpriseId
	}
	return ""
}

func (x *UploadCookie) GetCookies() []*Cookies {
	if x != nil {
		return x.Cookies
	}
	return nil
}

func (x *UploadCookie) GetBrowserRequest() string {
	if x != nil {
		return x.BrowserRequest
	}
	return ""
}

type Cookies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key      string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                            //Cookie的名称
	Value    string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                        //Cookie的值
	Domain   string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`                      //Cookie的所在域
	Expire   int64  `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`                     //Cookie的过期时间
	Path     string `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`                          //Cookie的保存路径
	Size     int64  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`                         //Cookie的保存路径
	HttpOnly bool   `protobuf:"varint,7,opt,name=http_only,json=httpOnly,proto3" json:"http_only,omitempty"` //cookie是否 httpOnly
}

func (x *Cookies) Reset() {
	*x = Cookies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cookies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cookies) ProtoMessage() {}

func (x *Cookies) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cookies.ProtoReflect.Descriptor instead.
func (*Cookies) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{6}
}

func (x *Cookies) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Cookies) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *Cookies) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *Cookies) GetExpire() int64 {
	if x != nil {
		return x.Expire
	}
	return 0
}

func (x *Cookies) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Cookies) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Cookies) GetHttpOnly() bool {
	if x != nil {
		return x.HttpOnly
	}
	return false
}

// 上报cookie响应
type UploadCookieRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrRzInterval int32 `protobuf:"varint,1,opt,name=qr_rz_interval,json=qrRzInterval,proto3" json:"qr_rz_interval,omitempty"` // 获取实人认证二维码状态的定时时间,单位秒
}

func (x *UploadCookieRsp) Reset() {
	*x = UploadCookieRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadCookieRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadCookieRsp) ProtoMessage() {}

func (x *UploadCookieRsp) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadCookieRsp.ProtoReflect.Descriptor instead.
func (*UploadCookieRsp) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{7}
}

func (x *UploadCookieRsp) GetQrRzInterval() int32 {
	if x != nil {
		return x.QrRzInterval
	}
	return 0
}

type RPAInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpaCmd  RPACMD `protobuf:"varint,1,opt,name=rpa_cmd,json=rpaCmd,proto3,enum=einvoiceproxyctl.RPACMD" json:"rpa_cmd,omitempty"`
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"` //需要执行的js语句或需查找的元素名称
}

func (x *RPAInfo) Reset() {
	*x = RPAInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPAInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPAInfo) ProtoMessage() {}

func (x *RPAInfo) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPAInfo.ProtoReflect.Descriptor instead.
func (*RPAInfo) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{8}
}

func (x *RPAInfo) GetRpaCmd() RPACMD {
	if x != nil {
		return x.RpaCmd
	}
	return RPACMD_RPA_NONE
}

func (x *RPAInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 打开税局url
type OpenUrl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 税号的全电官网地址
}

func (x *OpenUrl) Reset() {
	*x = OpenUrl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OpenUrl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenUrl) ProtoMessage() {}

func (x *OpenUrl) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenUrl.ProtoReflect.Descriptor instead.
func (*OpenUrl) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{9}
}

func (x *OpenUrl) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 发送组装"认证二维码"数据请求
type QrRzReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq string `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"` // 请求流水号
}

func (x *QrRzReq) Reset() {
	*x = QrRzReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrRzReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrRzReq) ProtoMessage() {}

func (x *QrRzReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrRzReq.ProtoReflect.Descriptor instead.
func (*QrRzReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{10}
}

func (x *QrRzReq) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

// 发送组装"二维码扫脸认证状态"数据请求
type QrRzStatusReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq  string `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"`   // 请求流水号
	Rzid string `protobuf:"bytes,2,opt,name=rzid,proto3" json:"rzid,omitempty"` // 认证ID。由/kpfw/slrz/v1/hqemw返回的认证ID
}

func (x *QrRzStatusReq) Reset() {
	*x = QrRzStatusReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrRzStatusReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrRzStatusReq) ProtoMessage() {}

func (x *QrRzStatusReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrRzStatusReq.ProtoReflect.Descriptor instead.
func (*QrRzStatusReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{11}
}

func (x *QrRzStatusReq) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *QrRzStatusReq) GetRzid() string {
	if x != nil {
		return x.Rzid
	}
	return ""
}

// 请求检查客户端是否需要升级
type ClientUpgradeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CliVersion string `protobuf:"bytes,1,opt,name=cli_version,json=cliVersion,proto3" json:"cli_version,omitempty"`
}

func (x *ClientUpgradeReq) Reset() {
	*x = ClientUpgradeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientUpgradeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUpgradeReq) ProtoMessage() {}

func (x *ClientUpgradeReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUpgradeReq.ProtoReflect.Descriptor instead.
func (*ClientUpgradeReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{12}
}

func (x *ClientUpgradeReq) GetCliVersion() string {
	if x != nil {
		return x.CliVersion
	}
	return ""
}

type ClientUpgradeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrCliVersion string `protobuf:"bytes,1,opt,name=curr_cli_version,json=currCliVersion,proto3" json:"curr_cli_version,omitempty"`
	IsNeedUpgrade  bool   `protobuf:"varint,2,opt,name=is_need_upgrade,json=isNeedUpgrade,proto3" json:"is_need_upgrade,omitempty"` // 是否需要升级
	CliUpgradeUrl  string `protobuf:"bytes,3,opt,name=cli_upgrade_url,json=cliUpgradeUrl,proto3" json:"cli_upgrade_url,omitempty"`  // 客户端升级的下载地址
}

func (x *ClientUpgradeRsp) Reset() {
	*x = ClientUpgradeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientUpgradeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientUpgradeRsp) ProtoMessage() {}

func (x *ClientUpgradeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientUpgradeRsp.ProtoReflect.Descriptor instead.
func (*ClientUpgradeRsp) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{13}
}

func (x *ClientUpgradeRsp) GetCurrCliVersion() string {
	if x != nil {
		return x.CurrCliVersion
	}
	return ""
}

func (x *ClientUpgradeRsp) GetIsNeedUpgrade() bool {
	if x != nil {
		return x.IsNeedUpgrade
	}
	return false
}

func (x *ClientUpgradeRsp) GetCliUpgradeUrl() string {
	if x != nil {
		return x.CliUpgradeUrl
	}
	return ""
}

// 服务端组装由客户端发起“组装税局API接口请求”的响应通用格式
type CommClientAPIRequestBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq       string        `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"`                              // 请求流水号
	Url       string        `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`                              // 请求url
	HeadInfos []*HeaderInfo `protobuf:"bytes,3,rep,name=head_infos,json=headInfos,proto3" json:"head_infos,omitempty"` // 请求局端信息头
	ReqData   []byte        `protobuf:"bytes,4,opt,name=req_data,json=reqData,proto3" json:"req_data,omitempty"`       // 请求数据:json字节序
}

func (x *CommClientAPIRequestBody) Reset() {
	*x = CommClientAPIRequestBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommClientAPIRequestBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommClientAPIRequestBody) ProtoMessage() {}

func (x *CommClientAPIRequestBody) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommClientAPIRequestBody.ProtoReflect.Descriptor instead.
func (*CommClientAPIRequestBody) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{14}
}

func (x *CommClientAPIRequestBody) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *CommClientAPIRequestBody) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CommClientAPIRequestBody) GetHeadInfos() []*HeaderInfo {
	if x != nil {
		return x.HeadInfos
	}
	return nil
}

func (x *CommClientAPIRequestBody) GetReqData() []byte {
	if x != nil {
		return x.ReqData
	}
	return nil
}

// 获取税号的全电官网地址请求
type EidTaxUrlReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenEnterpriseId string `protobuf:"bytes,1,opt,name=open_enterprise_id,json=openEnterpriseId,proto3" json:"open_enterprise_id,omitempty"` // 社会信用代码，aes加密再base64传输
}

func (x *EidTaxUrlReq) Reset() {
	*x = EidTaxUrlReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EidTaxUrlReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EidTaxUrlReq) ProtoMessage() {}

func (x *EidTaxUrlReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EidTaxUrlReq.ProtoReflect.Descriptor instead.
func (*EidTaxUrlReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{15}
}

func (x *EidTaxUrlReq) GetOpenEnterpriseId() string {
	if x != nil {
		return x.OpenEnterpriseId
	}
	return ""
}

type EidTaxUrlRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`                        // 税号的全电官网地址
	BlueUrl string `protobuf:"bytes,2,opt,name=blue_url,json=blueUrl,proto3" json:"blue_url,omitempty"` // 登录后打开的蓝票页面
}

func (x *EidTaxUrlRsp) Reset() {
	*x = EidTaxUrlRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EidTaxUrlRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EidTaxUrlRsp) ProtoMessage() {}

func (x *EidTaxUrlRsp) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EidTaxUrlRsp.ProtoReflect.Descriptor instead.
func (*EidTaxUrlRsp) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{16}
}

func (x *EidTaxUrlRsp) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *EidTaxUrlRsp) GetBlueUrl() string {
	if x != nil {
		return x.BlueUrl
	}
	return ""
}

// 税局实人认证二维码信息变更
type TaxAuthQrCodeChangeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Seq          string                             `protobuf:"bytes,1,opt,name=seq,proto3" json:"seq,omitempty"`                                                                                                   // 请求流水号
	Type         TaxAuthQrCodeChangeReqType         `protobuf:"varint,2,opt,name=type,proto3,enum=einvoiceproxyctl.TaxAuthQrCodeChangeReqType" json:"type,omitempty"`                                               // 实名认证信息类型；1:二维码变更；2:二维码状态变更
	AuthId       string                             `protobuf:"bytes,3,opt,name=auth_id,json=authId,proto3" json:"auth_id,omitempty"`                                                                               // 实人认证ID
	QrCode       string                             `protobuf:"bytes,4,opt,name=qr_code,json=qrCode,proto3" json:"qr_code,omitempty"`                                                                               // type=1时存在的实人认证base64二维码
	QrCodeStatus TaxAuthQrCodeChangeReqQrCodeStatus `protobuf:"varint,5,opt,name=qr_code_status,json=qrCodeStatus,proto3,enum=einvoiceproxyctl.TaxAuthQrCodeChangeReqQrCodeStatus" json:"qr_code_status,omitempty"` // type=2时存在的二维码状态；0:未定义；1：未处理，2：实人完成，3刷新二维码，4需要重新登录税局
}

func (x *TaxAuthQrCodeChangeReq) Reset() {
	*x = TaxAuthQrCodeChangeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxAuthQrCodeChangeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxAuthQrCodeChangeReq) ProtoMessage() {}

func (x *TaxAuthQrCodeChangeReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxAuthQrCodeChangeReq.ProtoReflect.Descriptor instead.
func (*TaxAuthQrCodeChangeReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{17}
}

func (x *TaxAuthQrCodeChangeReq) GetSeq() string {
	if x != nil {
		return x.Seq
	}
	return ""
}

func (x *TaxAuthQrCodeChangeReq) GetType() TaxAuthQrCodeChangeReqType {
	if x != nil {
		return x.Type
	}
	return TaxAuthQrCodeChangeReqType_TypeNone
}

func (x *TaxAuthQrCodeChangeReq) GetAuthId() string {
	if x != nil {
		return x.AuthId
	}
	return ""
}

func (x *TaxAuthQrCodeChangeReq) GetQrCode() string {
	if x != nil {
		return x.QrCode
	}
	return ""
}

func (x *TaxAuthQrCodeChangeReq) GetQrCodeStatus() TaxAuthQrCodeChangeReqQrCodeStatus {
	if x != nil {
		return x.QrCodeStatus
	}
	return TaxAuthQrCodeChangeReqQrCodeStatus_StatusNone
}

type TaxAuthQrCodeChangeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TaxAuthQrCodeChangeRsp) Reset() {
	*x = TaxAuthQrCodeChangeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaxAuthQrCodeChangeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaxAuthQrCodeChangeRsp) ProtoMessage() {}

func (x *TaxAuthQrCodeChangeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaxAuthQrCodeChangeRsp.ProtoReflect.Descriptor instead.
func (*TaxAuthQrCodeChangeRsp) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{18}
}

// 获取税局页面DOM信息
type GetDomReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenEnterpriseId string `protobuf:"bytes,1,opt,name=open_enterprise_id,json=openEnterpriseId,proto3" json:"open_enterprise_id,omitempty"` // 社会信用代码，aes加密再base64传输
}

func (x *GetDomReq) Reset() {
	*x = GetDomReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDomReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDomReq) ProtoMessage() {}

func (x *GetDomReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDomReq.ProtoReflect.Descriptor instead.
func (*GetDomReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{19}
}

func (x *GetDomReq) GetOpenEnterpriseId() string {
	if x != nil {
		return x.OpenEnterpriseId
	}
	return ""
}

type GetDomRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LoginSuccess string `protobuf:"bytes,1,opt,name=loginSuccess,proto3" json:"loginSuccess,omitempty"` // 登录成功标识。首页搜索框的ID,<input id='xxxx'...>
}

func (x *GetDomRsp) Reset() {
	*x = GetDomRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDomRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDomRsp) ProtoMessage() {}

func (x *GetDomRsp) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDomRsp.ProtoReflect.Descriptor instead.
func (*GetDomRsp) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{20}
}

func (x *GetDomRsp) GetLoginSuccess() string {
	if x != nil {
		return x.LoginSuccess
	}
	return ""
}

// 推送实人认证二维码和二维码扫码状态
type SPushQRCodeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	QrcodeBase64 string `protobuf:"bytes,1,opt,name=qrcode_base64,json=qrcodeBase64,proto3" json:"qrcode_base64,omitempty"` // 需要进行扫码认证的实人二维码base64。客户端无需轮询扫码状态，由服务端通知是否客户端可以关闭（为空时关闭）。同时客户端可以存在最长展示时间
}

func (x *SPushQRCodeReq) Reset() {
	*x = SPushQRCodeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPushQRCodeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPushQRCodeReq) ProtoMessage() {}

func (x *SPushQRCodeReq) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPushQRCodeReq.ProtoReflect.Descriptor instead.
func (*SPushQRCodeReq) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{21}
}

func (x *SPushQRCodeReq) GetQrcodeBase64() string {
	if x != nil {
		return x.QrcodeBase64
	}
	return ""
}

type SPushQRCodeRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SPushQRCodeRsp) Reset() {
	*x = SPushQRCodeRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SPushQRCodeRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SPushQRCodeRsp) ProtoMessage() {}

func (x *SPushQRCodeRsp) ProtoReflect() protoreflect.Message {
	mi := &file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SPushQRCodeRsp.ProtoReflect.Descriptor instead.
func (*SPushQRCodeRsp) Descriptor() ([]byte, []int) {
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP(), []int{22}
}

var File_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto protoreflect.FileDescriptor

var file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDesc = []byte{
	0x0a, 0x36, 0x65, 0x2d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x2d, 0x63, 0x74, 0x6c, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
	0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x73, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x22, 0xb3, 0x01, 0x0a, 0x07, 0x53,
	0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67, 0x12, 0x27, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x2e, 0x43, 0x4d, 0x44, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x72, 0x65, 0x73, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x62, 0x6f, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x22, 0x34, 0x0a, 0x0a, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x78, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3b, 0x0a,
	0x0a, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x78,
	0x79, 0x63, 0x74, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x65,
	0x71, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x65,
	0x71, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x73,
	0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x72, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x22, 0x7b, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x4c,
	0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73,
	0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x66, 0x6c, 0x61,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0xbb, 0x01, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65,
	0x49, 0x64, 0x12, 0x33, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70, 0x72,
	0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x2e, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x07,
	0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0xa6, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x68, 0x74, 0x74, 0x70, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x08, 0x68, 0x74, 0x74, 0x70, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0x37, 0x0a, 0x0f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x73, 0x70, 0x12, 0x24, 0x0a, 0x0e,
	0x71, 0x72, 0x5f, 0x72, 0x7a, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x71, 0x72, 0x52, 0x7a, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x22, 0x56, 0x0a, 0x07, 0x52, 0x50, 0x41, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a,
	0x07, 0x72, 0x70, 0x61, 0x5f, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18,
	0x2e, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74,
	0x6c, 0x2e, 0x52, 0x50, 0x41, 0x43, 0x4d, 0x44, 0x52, 0x06, 0x72, 0x70, 0x61, 0x43, 0x6d, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x1b, 0x0a, 0x07, 0x4f, 0x70,
	0x65, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x22, 0x1b, 0x0a, 0x07, 0x51, 0x72, 0x52, 0x7a, 0x52,
	0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x73, 0x65, 0x71, 0x22, 0x35, 0x0a, 0x0d, 0x51, 0x72, 0x52, 0x7a, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x7a, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x7a, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x10, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x8c, 0x01, 0x0a, 0x10, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x55, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x52, 0x73, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x75, 0x72, 0x72, 0x5f, 0x63, 0x6c,
	0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x63, 0x75, 0x72, 0x72, 0x43, 0x6c, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4e, 0x65, 0x65, 0x64,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6c, 0x69, 0x5f, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x63, 0x6c, 0x69, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x22,
	0x96, 0x01, 0x0a, 0x18, 0x43, 0x6f, 0x6d, 0x6d, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x50,
	0x49, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x3b, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70,
	0x72, 0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x72, 0x65, 0x71, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x07, 0x72, 0x65, 0x71, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3c, 0x0a, 0x0c, 0x45, 0x69, 0x64, 0x54,
	0x61, 0x78, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e,
	0x5f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70,
	0x72, 0x69, 0x73, 0x65, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x0c, 0x45, 0x69, 0x64, 0x54, 0x61, 0x78,
	0x55, 0x72, 0x6c, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x6c, 0x75, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x6c, 0x75, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0xfa, 0x01, 0x0a, 0x16, 0x54, 0x61, 0x78, 0x41, 0x75, 0x74, 0x68, 0x51,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x71,
	0x12, 0x40, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c,
	0x2e, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74,
	0x6c, 0x2e, 0x54, 0x61, 0x78, 0x41, 0x75, 0x74, 0x68, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x71,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x71, 0x72,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x5a, 0x0a, 0x0e, 0x71, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x65,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x2e,
	0x54, 0x61, 0x78, 0x41, 0x75, 0x74, 0x68, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x0c, 0x71, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0x18, 0x0a, 0x16, 0x54, 0x61, 0x78, 0x41, 0x75, 0x74, 0x68, 0x51, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x73, 0x70, 0x22, 0x39, 0x0a, 0x09, 0x47, 0x65,
	0x74, 0x44, 0x6f, 0x6d, 0x52, 0x65, 0x71, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x70, 0x65, 0x6e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x70, 0x72,
	0x69, 0x73, 0x65, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x6d, 0x52,
	0x73, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x22, 0x35, 0x0a, 0x0e, 0x53, 0x50, 0x75, 0x73, 0x68, 0x51,
	0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x12, 0x23, 0x0a, 0x0d, 0x71, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x36, 0x34, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x42, 0x61, 0x73, 0x65, 0x36, 0x34, 0x22, 0x10, 0x0a,
	0x0e, 0x53, 0x50, 0x75, 0x73, 0x68, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x73, 0x70, 0x2a,
	0xad, 0x05, 0x0a, 0x03, 0x43, 0x4d, 0x44, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4d, 0x44, 0x5f, 0x4e,
	0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4d, 0x44, 0x5f, 0x48, 0x45, 0x41,
	0x52, 0x54, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x01, 0x12, 0x16, 0x0a,
	0x12, 0x43, 0x4d, 0x44, 0x5f, 0x48, 0x45, 0x41, 0x52, 0x54, 0x5f, 0x42, 0x45, 0x41, 0x54, 0x5f,
	0x52, 0x53, 0x50, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4d, 0x44, 0x5f, 0x4f, 0x50, 0x45,
	0x4e, 0x5f, 0x55, 0x52, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x4d, 0x44, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x55, 0x52, 0x4c, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0x04, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4d, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x58, 0x59, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4d, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x58,
	0x59, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x06, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4d, 0x44, 0x5f, 0x55,
	0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0x07, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4d, 0x44, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f,
	0x4c, 0x4f, 0x47, 0x49, 0x4e, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x08, 0x12, 0x19, 0x0a, 0x15, 0x43,
	0x4d, 0x44, 0x5f, 0x55, 0x50, 0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x49, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0x09, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4d, 0x44, 0x5f, 0x55, 0x50,
	0x4c, 0x4f, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x4f, 0x4b, 0x49, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0x0a, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4d, 0x44, 0x5f, 0x51, 0x52, 0x5f, 0x52, 0x5a, 0x5f, 0x52,
	0x45, 0x51, 0x10, 0x0b, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4d, 0x44, 0x5f, 0x51, 0x52, 0x5f, 0x52,
	0x5a, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4d, 0x44, 0x5f, 0x51,
	0x52, 0x5f, 0x52, 0x5a, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x45, 0x51, 0x10,
	0x0d, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4d, 0x44, 0x5f, 0x51, 0x52, 0x5f, 0x52, 0x5a, 0x5f, 0x53,
	0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x0e, 0x12, 0x1d, 0x0a, 0x19, 0x43,
	0x4d, 0x44, 0x5f, 0x43, 0x4b, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x47,
	0x52, 0x41, 0x44, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x0f, 0x12, 0x1d, 0x0a, 0x19, 0x43, 0x4d,
	0x44, 0x5f, 0x43, 0x4b, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x47, 0x52,
	0x41, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x10, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4d, 0x44,
	0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x11, 0x12, 0x21, 0x0a, 0x1d,
	0x43, 0x4d, 0x44, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x47, 0x52, 0x41,
	0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x12, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x4d, 0x44, 0x5f, 0x45, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x55,
	0x52, 0x4c, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x13, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4d, 0x44, 0x5f,
	0x45, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x55, 0x52, 0x4c, 0x5f, 0x52, 0x53, 0x50, 0x10,
	0x14, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4d, 0x44, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x41, 0x55, 0x54,
	0x48, 0x5f, 0x51, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0x15, 0x12, 0x23, 0x0a, 0x1f, 0x43, 0x4d, 0x44, 0x5f, 0x54, 0x41,
	0x58, 0x5f, 0x41, 0x55, 0x54, 0x48, 0x5f, 0x51, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43,
	0x48, 0x41, 0x4e, 0x47, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x16, 0x12, 0x0f, 0x0a, 0x0b, 0x43,
	0x4d, 0x44, 0x5f, 0x44, 0x4f, 0x4d, 0x5f, 0x52, 0x45, 0x51, 0x10, 0x17, 0x12, 0x0f, 0x0a, 0x0b,
	0x43, 0x4d, 0x44, 0x5f, 0x44, 0x4f, 0x4d, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x18, 0x12, 0x17, 0x0a,
	0x13, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x50, 0x55, 0x53, 0x48, 0x51, 0x52, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x52, 0x45, 0x51, 0x10, 0x19, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4d, 0x44, 0x5f, 0x53, 0x50,
	0x55, 0x53, 0x48, 0x51, 0x52, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x52, 0x53, 0x50, 0x10, 0x1a, 0x2a,
	0x54, 0x0a, 0x06, 0x52, 0x50, 0x41, 0x43, 0x4d, 0x44, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x50, 0x41,
	0x5f, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x50, 0x41, 0x5f, 0x4a,
	0x53, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x50, 0x41, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12,
	0x12, 0x0a, 0x0e, 0x52, 0x50, 0x41, 0x5f, 0x43, 0x4c, 0x41, 0x53, 0x53, 0x5f, 0x4e, 0x41, 0x4d,
	0x45, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x50, 0x41, 0x5f, 0x54, 0x41, 0x47, 0x5f, 0x4e,
	0x41, 0x4d, 0x45, 0x10, 0x04, 0x2a, 0x50, 0x0a, 0x1a, 0x54, 0x61, 0x78, 0x41, 0x75, 0x74, 0x68,
	0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x6f, 0x6e, 0x65, 0x10,
	0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x79, 0x70, 0x65, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x10,
	0x01, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x79, 0x70, 0x65, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x22, 0x54, 0x61, 0x78, 0x41, 0x75,
	0x74, 0x68, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x51, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0e, 0x0a,
	0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x67, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x10, 0x04, 0x42, 0x14, 0x5a, 0x12, 0x2e, 0x3b, 0x65, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x70, 0x72, 0x6f, 0x78, 0x79, 0x63, 0x74, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescOnce sync.Once
	file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescData = file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDesc
)

func file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescGZIP() []byte {
	file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescOnce.Do(func() {
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescData = protoimpl.X.CompressGZIP(file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescData)
	})
	return file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDescData
}

var file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_goTypes = []interface{}{
	(CMD)(0),                                // 0: einvoiceproxyctl.CMD
	(RPACMD)(0),                             // 1: einvoiceproxyctl.RPACMD
	(TaxAuthQrCodeChangeReqType)(0),         // 2: einvoiceproxyctl.TaxAuthQrCodeChangeReqType
	(TaxAuthQrCodeChangeReqQrCodeStatus)(0), // 3: einvoiceproxyctl.TaxAuthQrCodeChangeReqQrCodeStatus
	(*SendMsg)(nil),                         // 4: einvoiceproxyctl.SendMsg
	(*HeaderInfo)(nil),                      // 5: einvoiceproxyctl.HeaderInfo
	(*ProxyRequestReq)(nil),                 // 6: einvoiceproxyctl.ProxyRequestReq
	(*ProxyRequestRsp)(nil),                 // 7: einvoiceproxyctl.ProxyRequestRsp
	(*UploadLogin)(nil),                     // 8: einvoiceproxyctl.UploadLogin
	(*UploadCookie)(nil),                    // 9: einvoiceproxyctl.UploadCookie
	(*Cookies)(nil),                         // 10: einvoiceproxyctl.Cookies
	(*UploadCookieRsp)(nil),                 // 11: einvoiceproxyctl.UploadCookieRsp
	(*RPAInfo)(nil),                         // 12: einvoiceproxyctl.RPAInfo
	(*OpenUrl)(nil),                         // 13: einvoiceproxyctl.OpenUrl
	(*QrRzReq)(nil),                         // 14: einvoiceproxyctl.QrRzReq
	(*QrRzStatusReq)(nil),                   // 15: einvoiceproxyctl.QrRzStatusReq
	(*ClientUpgradeReq)(nil),                // 16: einvoiceproxyctl.ClientUpgradeReq
	(*ClientUpgradeRsp)(nil),                // 17: einvoiceproxyctl.ClientUpgradeRsp
	(*CommClientAPIRequestBody)(nil),        // 18: einvoiceproxyctl.CommClientAPIRequestBody
	(*EidTaxUrlReq)(nil),                    // 19: einvoiceproxyctl.EidTaxUrlReq
	(*EidTaxUrlRsp)(nil),                    // 20: einvoiceproxyctl.EidTaxUrlRsp
	(*TaxAuthQrCodeChangeReq)(nil),          // 21: einvoiceproxyctl.TaxAuthQrCodeChangeReq
	(*TaxAuthQrCodeChangeRsp)(nil),          // 22: einvoiceproxyctl.TaxAuthQrCodeChangeRsp
	(*GetDomReq)(nil),                       // 23: einvoiceproxyctl.GetDomReq
	(*GetDomRsp)(nil),                       // 24: einvoiceproxyctl.GetDomRsp
	(*SPushQRCodeReq)(nil),                  // 25: einvoiceproxyctl.SPushQRCodeReq
	(*SPushQRCodeRsp)(nil),                  // 26: einvoiceproxyctl.SPushQRCodeRsp
}
var file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_depIdxs = []int32{
	0,  // 0: einvoiceproxyctl.SendMsg.cmd:type_name -> einvoiceproxyctl.CMD
	5,  // 1: einvoiceproxyctl.ProxyRequestReq.head_infos:type_name -> einvoiceproxyctl.HeaderInfo
	10, // 2: einvoiceproxyctl.UploadCookie.cookies:type_name -> einvoiceproxyctl.Cookies
	1,  // 3: einvoiceproxyctl.RPAInfo.rpa_cmd:type_name -> einvoiceproxyctl.RPACMD
	5,  // 4: einvoiceproxyctl.CommClientAPIRequestBody.head_infos:type_name -> einvoiceproxyctl.HeaderInfo
	2,  // 5: einvoiceproxyctl.TaxAuthQrCodeChangeReq.type:type_name -> einvoiceproxyctl.TaxAuthQrCodeChangeReqType
	3,  // 6: einvoiceproxyctl.TaxAuthQrCodeChangeReq.qr_code_status:type_name -> einvoiceproxyctl.TaxAuthQrCodeChangeReqQrCodeStatus
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_init() }
func file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_init() {
	if File_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeaderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyRequestReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProxyRequestRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadLogin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cookies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadCookieRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPAInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OpenUrl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrRzReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrRzStatusReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientUpgradeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientUpgradeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommClientAPIRequestBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EidTaxUrlReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EidTaxUrlRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaxAuthQrCodeChangeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaxAuthQrCodeChangeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDomReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDomRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPushQRCodeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SPushQRCodeRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_goTypes,
		DependencyIndexes: file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_depIdxs,
		EnumInfos:         file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_enumTypes,
		MessageInfos:      file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_msgTypes,
	}.Build()
	File_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto = out.File
	file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_rawDesc = nil
	file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_goTypes = nil
	file_e_invoice_proxy_ctl_inter_comm_server_client_msg_proto_depIdxs = nil
}
